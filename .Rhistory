propionate_results$propionate_expected <- "yes"
cysteine_and_propionate_results <- merge(cysteine_score_filtered_wide, propionate_results, by = c("species", "strain"), all= TRUE)
View(cysteine_and_propionate_results)
cysteine_score_filtered_wide$cysteine_expected <- "yes"
propionate_results$propionate_expected <- "yes"
cysteine_and_propionate_results <- merge(cysteine_score_filtered_wide, propionate_results, by = c("species", "strain"), all= TRUE)
cysteine_and_propionate_results_ForsterSpecies <- subset(cysteine_and_propionate_results, cysteine_and_propionate_results$species %in% Forster_gutSpecies$`Species Name`)
# View(cysteine_and_propionate_results)
write.csv(cysteine_and_propionate_results, "cysteine_and_propionate_results.csv")
write.csv(cysteine_and_propionate_results_ForsterSpecies, "cysteine_and_propionate_results_ForsterSpeices.csv")
View(cysteine_and_propionate_results_ForsterSpecies)
VIew(propionate_results)
View(propionate_results)
library(readr)
scoreFilteredByMaxScore_cysteine_results_updatedStrains <- read_csv("scoreFilteredByMaxScore_cysteine_results_updatedStrains.csv",
col_types = cols(...1 = col_skip()))
View(scoreFilteredByMaxScore_cysteine_results_updatedStrains)
df <- scoreFilteredByMaxScore_cysteine_results_updatedStrains
library(reshape2)
library(dplyr)
library(ggplot2)
library(reshape2)
df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("malY", "cysK", "cysM", "metC", "tnaA", "lcd"), variable.name = "gene")
# group_by to reorder bars by count
df %>%
group_by(gene) %>%
summarise(count = n()) %>%
ggplot(aes(x = reorder(gene, -count), y = count)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=count), vjust = -0.5, size = 3) +
ylab("Number of Strains") +
xlab("Gene") +
ggtitle("Number of Strains with Hits per Gene") +
theme_bw() +
scale_y_continuous(expand = c(0, 0), limits = c(0,90))
View(df)
library(dplyr)
library(ggplot2)
library(reshape2)
df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
df %>%
group_by(gene) %>%
summarise(count = n()) %>%
ggplot(aes(x = reorder(gene, -count), y = count)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=count), vjust = -0.5, size = 3) +
ylab("Number of Strains") +
xlab("Gene") +
ggtitle("Number of Strains with Hits per Gene") +
theme_bw() +
scale_y_continuous(expand = c(0, 0), limits = c(0,90))
library(dplyr)
library(ggplot2)
library(reshape2)
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
df %>%
group_by(gene) %>%
summarise(count = n()) %>%
# ggplot(aes(x = reorder(gene, -count), y = count)) +
#   geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
#   geom_text(stat='identity', aes(label=count), vjust = -0.5, size = 3) +
#   ylab("Number of Strains") +
#   xlab("Gene") +
#   ggtitle("Number of Strains with Hits per Gene") +
#   theme_bw() +
#   scale_y_continuous(expand = c(0, 0), limits = c(0,90))
ggplot(aes(x = gene), y = count)
library(dplyr)
library(ggplot2)
library(reshape2)
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(count = n()) %>%
# ggplot(aes(x = reorder(gene, -count), y = count)) +
#   geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
#   geom_text(stat='identity', aes(label=count), vjust = -0.5, size = 3) +
#   ylab("Number of Strains") +
#   xlab("Gene") +
#   ggtitle("Number of Strains with Hits per Gene") +
#   theme_bw() +
#   scale_y_continuous(expand = c(0, 0), limits = c(0,90))
ggplot(aes(x = gene), y = count)
library(dplyr)
library(ggplot2)
library(reshape2)
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(count = n()) %>%
# ggplot(aes(x = reorder(gene, -count), y = count)) +
#   geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
#   geom_text(stat='identity', aes(label=count), vjust = -0.5, size = 3) +
#   ylab("Number of Strains") +
#   xlab("Gene") +
#   ggtitle("Number of Strains with Hits per Gene") +
#   theme_bw() +
#   scale_y_continuous(expand = c(0, 0), limits = c(0,90))
ggplot(aes(x = gene), y = count) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5)
library(dplyr)
library(ggplot2)
library(reshape2)
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(count = n()) %>%
# ggplot(aes(x = reorder(gene, -count), y = count)) +
#   geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
#   geom_text(stat='identity', aes(label=count), vjust = -0.5, size = 3) +
#   ylab("Number of Strains") +
#   xlab("Gene") +
#   ggtitle("Number of Strains with Hits per Gene") +
#   theme_bw() +
#   scale_y_continuous(expand = c(0, 0), limits = c(0,90))
ggplot(aes(x = gene, y = count)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5)
library(dplyr)
library(ggplot2)
library(reshape2)
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = (n() / 214)*100) %>%
# ggplot(aes(x = reorder(gene, -count), y = count)) +
#   geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
#   geom_text(stat='identity', aes(label=count), vjust = -0.5, size = 3) +
#   ylab("Number of Strains") +
#   xlab("Gene") +
#   ggtitle("Number of Strains with Hits per Gene") +
#   theme_bw() +
#   scale_y_continuous(expand = c(0, 0), limits = c(0,90))
ggplot(aes(x = gene, y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5)
library(dplyr)
library(ggplot2)
library(reshape2)
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = (n() / 214)*100) %>%
ggplot(aes(x = reorder(gene, -perc), y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=perc), vjust = -0.5, size = 3) +
ylab("Number of Strains") +
xlab("Gene") +
ggtitle("Number of Strains with Hits per Gene") +
theme_bw() +
scale_y_continuous(expand = c(0, 0), limits = c(0,90))
library(dplyr)
library(ggplot2)
library(reshape2)
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = round((n() / 214)*100), digits = 0) %>%
ggplot(aes(x = reorder(gene, -perc), y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=perc), vjust = -0.5, size = 3) +
ylab("Number of Strains") +
xlab("Gene") +
ggtitle("Number of Strains with Hits per Gene") +
theme_bw() +
scale_y_continuous(expand = c(0, 0), limits = c(0,100))
library(dplyr)
library(ggplot2)
library(reshape2)
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = signif((n() / 214)*100), digits = 3) %>%
ggplot(aes(x = reorder(gene, -perc), y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=paste(perc, "%")), vjust = -0.5, size = 3) +
ylab("Number of Strains") +
xlab("Gene") +
ggtitle("Number of Strains with Hits per Gene") +
theme_bw() +
scale_y_continuous(expand = c(0, 0), limits = c(0,100))
library(dplyr)
library(ggplot2)
library(reshape2)
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = round((n() / 214)*100), digits = 1) %>%
ggplot(aes(x = reorder(gene, -perc), y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=paste(perc, "%")), vjust = -0.5, size = 3) +
ylab("Number of Strains") +
xlab("Gene") +
ggtitle("Number of Strains with Hits per Gene") +
theme_bw() +
scale_y_continuous(expand = c(0, 0), limits = c(0,100))
library(dplyr)
library(ggplot2)
library(reshape2)
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = round((n() / 214)*100), digits = 2) %>%
ggplot(aes(x = reorder(gene, -perc), y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=paste(perc, "%")), vjust = -0.5, size = 3) +
ylab("Number of Strains") +
xlab("Gene") +
ggtitle("Number of Strains with Hits per Gene") +
theme_bw() +
scale_y_continuous(expand = c(0, 0), limits = c(0,100))
library(dplyr)
library(ggplot2)
library(reshape2)
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = round((n() / 214)*100), digits = 3) %>%
ggplot(aes(x = reorder(gene, -perc), y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=paste(perc, "%")), vjust = -0.5, size = 3) +
ylab("Number of Strains") +
xlab("Gene") +
ggtitle("Number of Strains with Hits per Gene") +
theme_bw() +
scale_y_continuous(expand = c(0, 0), limits = c(0,100))
library(dplyr)
library(ggplot2)
library(reshape2)
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = signif((n() / 214)*100), digits = 1) %>%
ggplot(aes(x = reorder(gene, -perc), y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=paste(perc, "%")), vjust = -0.5, size = 3) +
ylab("Number of Strains") +
xlab("Gene") +
ggtitle("Number of Strains with Hits per Gene") +
theme_bw() +
scale_y_continuous(expand = c(0, 0), limits = c(0,100))
library(dplyr)
library(ggplot2)
library(reshape2)
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = round((n() / 214)*100), digits = 1) %>%
ggplot(aes(x = reorder(gene, -perc), y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=paste(perc, "%")), vjust = -0.5, size = 3) +
ylab("Number of Strains") +
xlab("Gene") +
ggtitle("Number of Strains with Hits per Gene") +
theme_bw() +
scale_y_continuous(expand = c(0, 0), limits = c(0,100))
library(dplyr)
library(ggplot2)
library(reshape2)
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = round((n() / 214)*100), digits = 5) %>%
ggplot(aes(x = reorder(gene, -perc), y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=paste(perc, "%")), vjust = -0.5, size = 3) +
ylab("Number of Strains") +
xlab("Gene") +
ggtitle("Number of Strains with Hits per Gene") +
theme_bw() +
scale_y_continuous(expand = c(0, 0), limits = c(0,100))
# library(dplyr)
# library(ggplot2)
# library(reshape2)
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = round((n() / 214)*100), digits = 3) %>%
ggplot(aes(x = reorder(gene, -perc), y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=paste(perc, "%")), vjust = -0.5, size = 3) +
ylab("Percentage of Strains") +
xlab("Gene") +
ggtitle("Percentage of Strains with Hits per Gene") +
theme(axis.title.x = italic()) +
theme_bw() +
scale_y_continuous(expand = c(0, 0), limits = c(0,100))
# library(dplyr)
# library(ggplot2)
# library(reshape2)
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = round((n() / 214)*100), digits = 3) %>%
ggplot(aes(x = reorder(gene, -perc), y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=paste(perc, "%")), vjust = -0.5, size = 3) +
ylab("Percentage of Strains") +
xlab("Gene") +
ggtitle("Percentage of Strains with Hits per Gene") +
theme(axis.title.x = element_text(face = "italic")) +
theme_bw() +
scale_y_continuous(expand = c(0, 0), limits = c(0,100))
# library(dplyr)
# library(ggplot2)
# library(reshape2)
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = round((n() / 214)*100), digits = 3) %>%
ggplot(aes(x = reorder(gene, -perc), y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=paste(perc, "%")), vjust = -0.5, size = 3) +
ylab("Percentage of Strains") +
xlab("Gene") +
ggtitle("Percentage of Strains with Hits per Gene") +
theme_bw() +
theme(axis.title.x = element_text(face = "italic")) +
scale_y_continuous(expand = c(0, 0), limits = c(0,100))
# library(dplyr)
# library(ggplot2)
# library(reshape2)
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = round((n() / 214)*100), digits = 3) %>%
ggplot(aes(x = reorder(gene, -perc), y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=paste(perc, "%")), vjust = -0.5, size = 3) +
ylab("Percentage of Strains") +
xlab("Gene") +
ggtitle("Percentage of Strains with Hits per Gene") +
theme_bw() +
theme(axis.label.x = element_text(face = "italic")) +
scale_y_continuous(expand = c(0, 0), limits = c(0,100))
?theme
# library(dplyr)
# library(ggplot2)
# library(reshape2)
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = round((n() / 214)*100), digits = 3) %>%
ggplot(aes(x = reorder(gene, -perc), y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=paste(perc, "%")), vjust = -0.5, size = 3) +
ylab("Percentage of Strains") +
xlab("Gene") +
ggtitle("Percentage of Strains with Hits per Gene") +
theme_bw() +
theme(axis.text.x = element_text(face = "italic")) +
scale_y_continuous(expand = c(0, 0), limits = c(0,100))
length(unique(cysteine_results))
length(unique(cysteine_results$strain))
library(dplyr)
library(ggplot2)
library(reshape2)
df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = round((n() / 214)*100), digits = 3) %>%
ggplot(aes(x = reorder(gene, -perc), y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=paste(perc, "%")), vjust = -0.5, size = 3) +
ylab("Percentage of Strains") +
xlab("Gene") +
ggtitle("Percentage of Strains with Hits per Gene") +
theme_bw() +
theme(axis.text.x = element_text(face = "italic")) +
scale_y_continuous(expand = c(0, 0), limits = c(0,100))
?ylab
# library(dplyr)
# library(ggplot2)
# library(reshape2)
#
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = round((n() / 214)*100), digits = 3) %>%
ggplot(aes(x = reorder(gene, -perc), y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=paste(perc, "%")), vjust = -0.5, size = 3) +
ylab("Percentage of Strains", size) +
xlab("Gene") +
ggtitle("Percentage of Strains with Hits per Gene") +
theme_bw() +
theme(axis.text.x = element_text(face = "italic", size = 10), axis.text.y = element_text(size = 10)) +
scale_y_continuous(expand = c(0, 0), limits = c(0,100))
# library(dplyr)
# library(ggplot2)
# library(reshape2)
#
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = round((n() / 214)*100), digits = 3) %>%
ggplot(aes(x = reorder(gene, -perc), y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=paste(perc, "%")), vjust = -0.5, size = 3) +
ylab("Percentage of Strains") +
xlab("Gene") +
ggtitle("Percentage of Strains with Hits per Gene") +
theme_bw() +
theme(axis.text.x = element_text(face = "italic", size = 10), axis.text.y = element_text(size = 10)) +
scale_y_continuous(expand = c(0, 0), limits = c(0,100))
# library(dplyr)
# library(ggplot2)
# library(reshape2)
#
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = round((n() / 214)*100), digits = 3) %>%
ggplot(aes(x = reorder(gene, -perc), y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=paste(perc, "%")), vjust = -0.5, size = 3) +
ylab("Percentage of Strains") +
xlab("Gene") +
ggtitle("Percentage of Strains with Hits per Gene") +
theme_bw() +
theme(axis.text.x = element_text(face = "italic", size = 10), axis.text.y = element_text(size = 15), axis.title = element_text(size = 20)) +
scale_y_continuous(expand = c(0, 0), limits = c(0,100))
# library(dplyr)
# library(ggplot2)
# library(reshape2)
#
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = round((n() / 214)*100), digits = 3) %>%
ggplot(aes(x = reorder(gene, -perc), y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=paste(perc, "%")), vjust = -0.5, size = 3) +
ylab("Percentage of Strains") +
xlab("Gene") +
ggtitle("Percentage of Strains with Hits per Gene") +
theme_bw() +
theme(axis.text.x = element_text(face = "italic", size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 14)) +
scale_y_continuous(expand = c(0, 0), limits = c(0,100))
# library(dplyr)
# library(ggplot2)
# library(reshape2)
#
# df <- melt(scoreFilteredByMaxScore_cysteine_results_updatedStrains, id.vars = c("strain"), variable.name = "gene")
# group_by to reorder bars by count
subset(df, !is.na(df$value)) %>%
group_by(gene) %>%
summarise(perc = round((n() / 214)*100), digits = 3) %>%
ggplot(aes(x = reorder(gene, -perc), y = perc)) +
geom_bar(stat = "identity", fill = "darkorange", width = 0.5) +
geom_text(stat='identity', aes(label=paste(perc, "%")), vjust = -0.5, size = 4) +
ylab("Percentage of Strains") +
xlab("Gene") +
ggtitle("Percentage of Strains with Hits per Gene") +
theme_bw() +
theme(axis.text.x = element_text(face = "italic", size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 14)) +
scale_y_continuous(expand = c(0, 0), limits = c(0,100))
library(readr)
Strains_List_for_Experiments_Huang_Lab_Collection <- read_csv("Strains List for Experiments - Huang Lab Collection.csv")
View(Strains_List_for_Experiments_Huang_Lab_Collection)
KC_strains <- Strains_List_for_Experiments_Huang_Lab_Collection$`Genus/Species (BEI)...24`
library(readr)
Strains_List_for_Experiments_Sheet9 <- read_csv("Strains List for Experiments - Sheet9.csv")
View(Strains_List_for_Experiments_Sheet9)
common_strains <- Strains_List_for_Experiments_Sheet9$Strain
library(readr)
write_lines(intersect(common_strains, KC_strains), "KC_common_strains_list.txt")
write_lines(intersect(common_strains, KC_strains), "KC_common_strains_list.txt", sep = "\n")
common_strains_not_inlab <- subset(Strains_List_for_Experiments_Sheet9$Availability != "in lab", Strains_List_for_Experiments_Sheet9$Strain)
common_strains_not_inlab <- subset(Strains_List_for_Experiments_Sheet9$Strain, Strains_List_for_Experiments_Sheet9$Availability != "in lab")
write_lines(intersect(common_strains_not_inlab, KC_strains), "KC_common_strains_list.txt", sep = "\n")
common_strains_not_inlab
subset(Strains_List_for_Experiments_Sheet9$Strain, Strains_List_for_Experiments_Sheet9$Availability == "in lab")
subset(Strains_List_for_Experiments_Sheet9$Strain, Strains_List_for_Experiments_Sheet9$Availability == "KC" | is.na(Strains_List_for_Experiments_Sheet9$Availability))
common_strains_not_inlab <- subset(Strains_List_for_Experiments_Sheet9$Strain, Strains_List_for_Experiments_Sheet9$Availability == "KC" | is.na(Strains_List_for_Experiments_Sheet9$Availability))
write_lines(intersect(common_strains_not_inlab, KC_strains), "KC_common_strains_list.txt", sep = "\n")
library(readr)
merged_pathways_df_afterFiltering <- read_csv("~/Desktop/Cremer_Lab_2022/SCFA_Project/Propionate_genes/merged_pathways_df_afterFiltering.csv")
View(merged_pathways_df_afterFiltering)
library(readr)
merged_pathways_df_afterFiltering <- read_csv("~/Desktop/Cremer_Lab_2022/SCFA_Project/Propionate_genes/merged_pathways_df_afterFiltering.csv")
View(merged_pathways_df_afterFiltering$strain, merged_pathways_df_afterFiltering$pathway == "acrylate")
View(subset(merged_pathways_df_afterFiltering$strain, merged_pathways_df_afterFiltering$pathway == "propanediol"))
View(subset(merged_pathways_df_afterFiltering$strain, merged_pathways_df_afterFiltering$pathway == "propanediol pathway"))
View(subset(merged_pathways_df_afterFiltering$strain, merged_pathways_df_afterFiltering$pathway == "acrylate pathway"))
View(subset(merged_pathways_df_afterFiltering$strain, merged_pathways_df_afterFiltering$pathway == "propanediol pathway"))
View(subset(merged_pathways_df_afterFiltering$strain, merged_pathways_df_afterFiltering$pathway == "Wood-Werkman Cycle"))
View(subset(merged_pathways_df_afterFiltering$strain, merged_pathways_df_afterFiltering$pathway == "sodium pumping decarboxylase"))
View(subset(merged_pathways_df_afterFiltering$strain, merged_pathways_df_afterFiltering$pathway == "sodium-pumping decarboxylase"))
